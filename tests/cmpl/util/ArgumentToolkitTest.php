<?php
namespace cmpl\util;

require_once 'PHPUnit/Framework.php';

/**
 * Test class for ArgumentToolkit.
 * Generated by PHPUnit on 2010-06-16 at 09:31:31.
 */
class ArgumentToolkitTest extends \PHPUnit_Framework_TestCase
{
    public function provideToDecorate()
    {
        return array(
            // Test 1 Closure
            array(
                function($a, $b) { return $a + $b; },
                array(
                    'b' => 3,
                    'a' => 5,
                    'c' => 10
                ),
                array(5, 3)
            ),

            // Test 2 $object->__invoke()
            array(
                new ArgumentToolkitTestInvoker(),
                array(
                    'd' => 10,
                    'a' => 1,
                    'c' => 3,
                    'b' => 2
                ),
                array(1, 2, 3)
            ),

            // Test 3 internal function
            array(
                'str_replace',
                array('foo' => 'bar', 'search' => '_', 'replace' => DIRECTORY_SEPARATOR, 'subject' => 'PHPUnit_Framework_TestCase'),
                array('_', DIRECTORY_SEPARATOR, 'PHPUnit_Framework_TestCase')
            ),

            // Test 4 static method
            array(
                array(__NAMESPACE__ . '\ArgumentToolkitTestInvoker', 'foo'),
                array(
                    'one',
                    'two',
                    'bar' => 'FooBar',
                    1,
                    2
                ),
                array(
                    'FooBar'
                )
            )
        );
    }

    /**
     * @dataProvider provideToDecorate
     */
    public function testDecorate($callback, $parameters, $args)
    {
        $this->assertEquals($args, ArgumentToolkit::decorate($callback, $parameters));
    }


    public function provideToCall()
    {
        return array(
            // Test 1 static method
            array(
                array(__NAMESPACE__ . '\ArgumentToolkitTestInvoker', 'foo'),
                array('bar' => 'PHPUnit'),
                'Hello PHPUnit.'
            ),

            // Test 2 $object->__invoke()
            array(
                new ArgumentToolkitTestInvoker(),
                array('b' => 2, 'a' => 3),
                10
            ),

            // Test 3 ArrayAccess parameter
            array(
                new ArgumentToolkitTestInvoker(),
                new \ArrayObject(array('b' => 2, 'a' => 3)),
                10
            )
        );
    }

    /**
     * @dataProvider provideToCall
     */
    public function testCall($callback, $parameters, $result)
    {
        $this->assertEquals($result, ArgumentToolkit::call($callback, $parameters));
    }
}


class ArgumentToolkitTestInvoker
{
    public function __invoke($a, $b, $c = 2)
    {
        return ($a + $b) * $c;
    }

    public static function foo($bar)
    {
        return sprintf('Hello %s.', $bar);
    }
}