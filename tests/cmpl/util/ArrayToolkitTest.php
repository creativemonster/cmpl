<?php
namespace cmpl\util;

require_once 'PHPUnit/Framework.php';


/**
 * Test class for ArrayToolkit.
 * Generated by PHPUnit on 2010-06-13 at 14:42:46.
 */
class ArrayToolkitTest extends \PHPUnit_Framework_TestCase
{
    public function testConvertKey()
    {
        $convertedArray = array(
            1 => 'one',
            2 => 'two',
            3 => 'three'
        );

        $array = array(
            'foo' => 'one',
            'bar' => 'two',
            3     => 'three'
        );

        $keys = array(
            'foo' => 1,
            'bar' => 2,
            'baz' => 3
        );

        $this->assertEquals($convertedArray, ArrayToolkit::convertKey($array, $keys));
    }

    public function testDeepMerge()
    {
        $array = array(
            'one' => 'first',
            'two' => 'second',
            'foo' => array('bar' => 'baz', 'color' => 'blue')
        );

        $array1 = array(
            'one' => 'apple',
            'two' => 'second',
            'foo' => array('bar' => null, 'color' => 'blue')
        );

        $array2 = array(
            'one' => 'first',
            'foo' => array('bar' => 'baz')
        );

        $this->assertEquals($array, ArrayToolkit::deepMerge($array1, $array2));
    }

    public function testFlatten()
    {
        $flattened = array(
            'red',
            'blue',
            'yellow',
            'green'
        );

        $array = array(
            'red',
            array('blue', 'yellow'),
            'color' => array('green')
        );

        $this->assertEquals($flattened, ArrayToolkit::flatten($array));
    }

    public function testDeepFlatten()
    {
        $flattened = array(
            'red',
            'blue',
            'yellow',
            'green'
        );

        $array = array(
            'red',
            array('blue', array('color' => array('yellow'))),
            'color' => array('green')
        );

        $this->assertEquals($flattened, ArrayToolkit::deepFlatten($array));
    }
}
